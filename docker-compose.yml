version: "3.6"

services:
  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"

  api:
    image: node:latest
    restart: unless-stopped
    command: npm run start:debug
    working_dir: /usr/src/app
    ports:
      - 3333:3000
    volumes:
      - ./api/:/usr/src/app
      #- /usr/src/app/node_modules

  meilisearch:
    image: getmeili/meilisearch
    restart: unless-stopped
    ports:
      - 7700:7700
    volumes:
      - meilisearch_data:/data.ms

  admin:
    image: node:16-alpine3.13
    working_dir: /home/node/app
    volumes:
      - ./admin:/home/node/app
    #command: "npm run prod"
    command: "npm run dev"
    restart: unless-stopped
    ports:
      - 5000:3000

  postgres:
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgrespassword
    volumes:
      - db_data:/var/lib/postgresql/data

  graphql-engine:
    image: hasura/graphql-engine:v2.8.0-beta.1.cli-migrations-v3
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: "myhasurasecret"
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
    volumes:
      - ./hasura/migrations:/migrations
      - ./hasura/metadata:/metadata
      - ./hasura/config.yaml:/config.yaml

  hasura-auth:
    image: nhost/hasura-auth:latest
    depends_on:
      - postgres
      - graphql-engine
    env_file:
      - .env
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_GRAPHQL_URL: http://graphql-engine:8080/v1/graphql
      AUTH_SMTP_HOST: mailhog
      AUTH_SMTP_PORT: 1025
      AUTH_ACCESS_TOKEN_EXPIRES_IN: 20
    ports:
      - "4000:4000"
    volumes:
      - ./email-templates:/app/email-templates

  minio:
    image: minio/minio
    restart: unless-stopped
    environment:
      S3_BUCKET: hasura-backend-plus
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: "thesupersecretkey" ## min 8 character
    entrypoint: sh
    command: "-c 'mkdir -p /export/hasura-backend-plus && /usr/bin/minio server /export'"
    ports:
      - "9001:9001"
    volumes:
      - "minio_data:/data"

  mailhog:
    image: mailhog/mailhog
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_PASS: ${AUTH_SMTP_PASS}
      SMTP_USER: ${AUTH_SMTP_USER}
      SMTP_SECURE: "${AUTH_SMTP_SECURE}"
      SMTP_SENDER: ${AUTH_SMTP_SENDER}
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    volumes:
      - ./docker/data/mailhog:/maildir

volumes:
  db_data:
  minio_data:
  meilisearch_data:
